import { useState, useEffect } from 'react';
import { useDispatch } from 'react-redux';
import { Suspense } from 'react';
import { Outlet, useParams } from 'react-router-dom';
import { LessonMenu } from '../LessonMenu/LessonMenu';
import { getExercise } from '../../redux/exercises/operations';
import { getDiary } from '../../redux/diary/operations';
import { changeLesson } from '../../redux/exercises/lessonSlice';
import courses from "../courses.json";
import css from './Lesson.module.css';

export default function Lesson () {
    const dispatch = useDispatch();
    const [isChangedLesson, setIsChangedLesson] = useState(false);

    const {courseId, lessonId} = useParams();
    const currentCourse = courses.find(course => course.id === courseId);
    const currentLesson = currentCourse.lessons.find(lesson => lesson.day === lessonId);

    useEffect(() => {
        dispatch(changeLesson(currentLesson));
        dispatch(getExercise({courseId, lessonId}));
        dispatch(getDiary({courseId, lessonId})); 
        setIsChangedLesson(true);     
    }, [dispatch, courseId, lessonId, currentLesson]);

    return (
        <> 
            {isChangedLesson &&         
            <div className={css.lessonContainer}>
                <img src={currentLesson.image} alt={`–î–µ–Ω—å ${currentLesson.day}`} width="100%" />
                
                {courseId === 'id-1' ?
                <>
                    <div className={css.descriptionAudio}>
                        <p>–ù–∏–∂—á–µ –≤–∏ –º–æ–∂–µ—Ç–µ –ø—Ä–æ—Å–ª—É—Ö–∞—Ç–∏ –∞—É–¥—ñ–æ–≤–µ—Ä—Å—ñ—é –∑–∞–≤–¥–∞–Ω—å —Ç–∞ –ø—Ä–∏–∫–ª–∞–¥ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –æ–¥–Ω–æ–≥–æ –∑ –Ω–∏—Ö –≤—ñ–¥ –ö–∞—Ç—Ä—ñ, –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∫–∏ —Ä–æ–∑–º–æ–≤–Ω–∏—Ö –∫–ª—É–±—ñ–≤ ¬´–Ñ–¥–∏–Ω—ñ¬ª, –≤–∏–∫–ª–∞–¥–∞—á–∫–∏ —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—ó –º–æ–≤–∏ üôè 
                            <br />–û–∫—Ä–µ–º–∏–º –∞—É–¥—ñ–æ–∑–∞–ø–∏—Å–æ–º - –¥–æ–¥–∞—Ç–∫–æ–≤—ñ –º–∞—Ç–µ—Ä—ñ–∞–ª–∏.
                        </p>
                        <p>–ê—É–¥—ñ–æ–≤–µ—Ä—Å—ñ—è –¥—É–±–ª—é—î —Ç–µ–∫—Å—Ç–æ–≤–∏–π –≤–∞—Ä—ñ–∞–Ω—Ç.</p>
                    </div>
                    <div className={css.wrapperAudio}>
                        {currentLesson.audio.length > 0 &&
                        <>
                            {currentLesson.audio.map((audioUrl) => (
                                <audio key={audioUrl} controls>
                                    <source src={audioUrl} type="audio/mp3" />
                                    –í–∞—à –±—Ä–∞—É–∑–µ—Ä –Ω–µ –ø—ñ–¥—Ç—Ä–∏–º—É—î –≤—ñ–¥—Ç–≤–æ—Ä–µ–Ω–Ω—è –∞—É–¥—ñ–æ.
                                </audio>
                            ))}
                        </>
                        }
                    </div>  
                </>
                :
                <LessonMenu />
                }
                <Suspense fallback={null}>
                    <Outlet /> 
                </Suspense>    
            </div>
            }
        </>           
    )
  };